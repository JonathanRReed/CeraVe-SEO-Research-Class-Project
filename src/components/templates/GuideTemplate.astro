---
import FaqAccordion from '../FaqAccordion.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'guides'>;
}

const { entry } = Astro.props as Props;
const { data } = entry;
const { Content, headings } = await entry.render();

const schema = {
  '@context': 'https://schema.org',
  '@type': 'HowTo',
  name: data.title,
  description: data.description,
  totalTime: 'PT10M',
  step: data.tlDr.map((item, index) => ({
    '@type': 'HowToStep',
    position: index + 1,
    text: item,
  })),
};
---

<article class="guide-template" data-page-type="guide">
  <header style="display: grid; gap: 1.25rem;">
    <h1 class="section-heading" style="margin-bottom: 0;">{data.title}</h1>
    <p class="section-subhead" style="margin-bottom: 0; font-size: 1.125rem;">{data.description}</p>
    {data.tlDr.length > 0 && (
      <div class="card" style="background: var(--color-accent-light); border-color: var(--color-accent); padding: 1.5rem;">
        <strong style="display: block; font-size: 1.125rem; margin-bottom: 0.75rem; color: var(--color-accent-dark);">TL;DR</strong>
        <ul style="margin: 0; padding-left: 1.25rem; display: grid; gap: 0.5rem;">
          {data.tlDr.map((item) => (
            <li style="color: var(--color-text);">{item}</li>
          ))}
        </ul>
      </div>
    )}
  </header>
  <div class="guide-body layout-with-toc">
    {headings.length > 0 && (
      <aside class="toc-sidebar" aria-label="On this page">
        <h2>Jump to</h2>
        <nav>
          {headings.slice(0, 8).map((heading) => (
            <a href={`#${heading.slug}`}>{heading.text}</a>
          ))}
        </nav>
      </aside>
    )}
    <div class="guide-content">
      <div class="prose">
        <Content />
      </div>
      {data.products.length > 0 && (
        <section class="product-grid" style="margin-top: 2rem;">
          <h2 style="font-size: 1.75rem; font-weight: 600; margin-bottom: 1.25rem;">Pick your product</h2>
          <div class="grid" style="gap: 1.5rem;">
            {data.products.map((product) => (
              <article class="card" data-product-tag={product.tags.join(',')} style="display: flex; flex-direction: column; gap: 1rem;">
                <h3 style="font-size: 1.125rem; font-weight: 600; margin: 0;">{product.name}</h3>
                <p style="color: var(--color-muted); font-size: 0.9375rem; margin: 0; flex-grow: 1;">{product.description}</p>
                <a class="btn btn-secondary" href={product.url}>See product</a>
              </article>
            ))}
          </div>
        </section>
      )}
    </div>
  </div>
  {data.faqs.length > 0 && <FaqAccordion items={data.faqs} />}
  {data.updated && <p class="last-updated">Last updated: {data.updated}</p>}
  <script type="application/ld+json">{JSON.stringify(schema)}</script>
</article>
