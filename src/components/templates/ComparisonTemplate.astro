---
import FaqAccordion from '../FaqAccordion.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'comparisons'>;
}

const { entry } = Astro.props as Props;
const { data } = entry;
const { Content } = await entry.render();

const faqSchema = data.faqs.length
  ? {
      '@context': 'https://schema.org',
      '@type': 'FAQPage',
      mainEntity: data.faqs.map((faq) => ({
        '@type': 'Question',
        name: faq.question,
        acceptedAnswer: {
          '@type': 'Answer',
          text: faq.answer,
        },
      })),
    }
  : undefined;
---

<article class="comparison-template" data-page-type="comparison">
  <header style="display: grid; gap: 1rem; margin-bottom: 2rem;">
    <h1 class="section-heading" style="margin-bottom: 0;">{data.title}</h1>
    <p class="section-subhead" style="margin-bottom: 0; font-size: 1.125rem;">{data.description}</p>
  </header>
  <div class="comparison-body" style="display: grid; gap: 2.5rem;">
    {data.criteria.length > 0 && (
      <section>
        <h2 style="font-size: 1.75rem; font-weight: 600; margin-bottom: 1.25rem;">Side-by-side snapshot</h2>
        <table class="comparison-table">
          <thead>
            <tr>
              <th scope="col">Criteria</th>
              <th scope="col">CeraVe</th>
              <th scope="col">Alternative</th>
            </tr>
          </thead>
          <tbody>
            {data.criteria.map((item) => (
              <tr>
                <th scope="row">{item.label}</th>
                <td>{item.cerave}</td>
                <td>{item.competitor}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </section>
    )}
    <div class="comparison-highlights" style="display: grid; gap: 2rem;">
      <div>
        <h2 style="font-size: 1.75rem; font-weight: 600; margin-bottom: 1.25rem;">Pros and watchouts</h2>
        <div class="grid" style="grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); gap: 1.5rem;">
          <article class="card" style="padding: 1.5rem;">
            <h3 style="font-size: 1.25rem; font-weight: 600; margin: 0 0 1rem 0; color: var(--color-accent-dark);">CeraVe</h3>
            <ul style="margin: 0; padding-left: 1.25rem; display: grid; gap: 0.5rem;">
              {data.pros.cerave.map((point) => (
                <li style="color: var(--color-text); line-height: 1.6;">{point}</li>
              ))}
            </ul>
          </article>
          <article class="card" style="padding: 1.5rem;">
            <h3 style="font-size: 1.25rem; font-weight: 600; margin: 0 0 1rem 0; color: var(--color-text);">Alternative</h3>
            <ul style="margin: 0; padding-left: 1.25rem; display: grid; gap: 0.5rem;">
              {data.pros.competitor.map((point) => (
                <li style="color: var(--color-text); line-height: 1.6;">{point}</li>
              ))}
            </ul>
          </article>
        </div>
      </div>
      {data.recommendations.length > 0 && (
        <div>
          <h2 style="font-size: 1.75rem; font-weight: 600; margin-bottom: 1rem;">Who should pick which</h2>
          <ul style="margin: 0; padding-left: 1.25rem; display: grid; gap: 0.75rem;">
            {data.recommendations.map((rec) => (
              <li style="line-height: 1.65;">
                <strong style="color: var(--color-accent-dark);">{rec.summary}</strong> <span style="color: var(--color-muted);">â€”</span> {rec.audience}
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
    <div class="prose">
      <Content />
    </div>
  </div>
  {data.faqs.length > 0 && <FaqAccordion items={data.faqs} />}
  {faqSchema && <script type="application/ld+json">{JSON.stringify(faqSchema)}</script>}
</article>
